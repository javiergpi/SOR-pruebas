
<powershell>




#Abrimos las reglas del Firewall para permitir PING
echo "....Abriendo reglas de Firewall...."
New-NetFirewallRule -DisplayName "Allow inbound ICMPv4" -Direction Inbound -Protocol ICMPv4 -IcmpType 8  -Action Allow
New-NetFirewallRule -DisplayName "Allow inbound ICMPv6" -Direction Inbound -Protocol ICMPv6 -IcmpType 8  -Action Allow
New-NetFirewallRule -DisplayName "Allow outbound ICMPv4" -Direction Outbound -Protocol ICMPv4 -IcmpType 8  -Action Allow
New-NetFirewallRule -DisplayName "Allow outbound ICMPv6" -Direction Outbound -Protocol ICMPv6 -IcmpType 8  -Action Allow
echo "....Abiertas reglas de Firewall...."



#Instalamos rol AD
echo "....Instalando rol AD...."
Install-windowsfeature -name AD-Domain-Services -IncludeManagementTools
echo "....Instalado rol AD...."

echo "....Instalando choco y git...."
# Modo unrestricted para powershell
Set-ExecutionPolicy -Scope CurrentUser -ExecutionPolicy RemoteSigned -Force

# Instalamos Choco para la posterior instalaci√≥n de Git
Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1')) 

# Instalamos Git
choco install git.install -y
echo "....Instalado choco y git...."


#Clonamos el repositorio remoto
echo "....Clonando repositorio remoto...."
 
if (Test-Path "SOR"){
    Remove-Item "SOR" -Recurse -Force
}

Start-Process git -ArgumentList 'clone $URL_REPOSITORIO'
echo "Clonado repositorio remoto"
pause

echo "....Clonado repositorio remoto...."


# Creamos tarea programada para promocionar a PDC tras reinicio"
echo "....Registrando tarea programada...."
$rutaScript= $PSScriptRoot+"\"+$script

 $exists = Get-ScheduledTask | Where-Object {$_.TaskName -like 'ConfiguraAD'}
 if($exists){
    Unregister-ScheduledTask -TaskName 'ConfiguraAD' -Confirm:$false
 }

$Action = New-ScheduledTaskAction -Execute 'Powershell' -Argument '-NonInteractive -NoLogo -NoProfile -File "$rutaScript"'
$Trigger = New-ScheduledTaskTrigger -AtLogon
$Settings = New-ScheduledTaskSettingsSet
$Task = New-ScheduledTask -Action $Action -Trigger $Trigger -Settings $Settings

Register-ScheduledTask -TaskName 'ConfiguraAD' -InputObject $Task -User $USUARIO -Password $PASSWORD
echo "Registrada tarea programada"

#Renombramos el servidor
echo "....Renombramos y reiniciamos...."

Rename-Computer -NewName $NOMBRE_SERVIDOR 
Restart-Computer 


</powershell>
